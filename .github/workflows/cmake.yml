name: CMake test matrix
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        compiler: [g++, clang++]
        kokkos: [on, off]
        mempool: [on, off]
        cuda: [on, off]
        exclude:
        - kokkos: off
          mempool: on
        - compiler: g++
          cuda: on

    steps:
    - uses: actions/checkout@v4
      with:
        path: omega_h

    - uses: actions/checkout@v4
      if: ${{ matrix.kokkos == 'on' }}
      with:
        repository: kokkos/kokkos
        path: kokkos

    - name: Install CUDA
      if: ${{ matrix.cuda == 'on' }}
      shell: bash
      run: |
        wget https://developer.download.nvidia.com/compute/cuda/12.3.1/local_installers/cuda_12.3.1_545.23.08_linux.run
        sudo sh cuda_12.3.1_545.23.08_linux.run --silent --toolkit --no-opengl-libs

    - name: Configure Kokkos
      if: ${{ matrix.kokkos == 'on' }}
      shell: bash
      working-directory: ${{github.workspace}}/kokkos
      run: cmake .
           -Bbuild
           -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
           -DKokkos_ENABLE_CUDA=${{ matrix.cuda }}
           -DKokkos_ARCH_TURING75=${{ matrix.cuda }}
           -DCMAKE_INSTALL_PREFIX=build/install

    - name: Build Kokkos
      if: ${{ matrix.kokkos == 'on' }}
      shell: bash
      run: cmake --build $GITHUB_WORKSPACE/kokkos/build --target install

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/omega_h
      run: cmake .
           -Bbuild
           -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
           -DCMAKE_VERBOSE_MAKEFILE=on
           -DOmega_h_USE_MPI=off
           -DOmega_h_USE_CUDA=${{ matrix.kokkos == 'off' && matrix.cuda || 'off' }}
           -DOmega_h_USE_Kokkos=${{ matrix.kokkos }}
           -DKokkos_PREFIX=$GITHUB_WORKSPACE/kokkos/build/install
           -DBUILD_TESTING=ON
           -DBUILD_SHARED_LIBS=OFF
           -DENABLE_CTEST_MEMPOOL=${{ matrix.mempool }}

    - name: Build
      working-directory: ${{github.workspace}}/omega_h/build
      shell: bash
      run: cmake --build .

    - name: Test
      if: ${{ matrix.cuda == 'off' }}
      working-directory: ${{github.workspace}}/omega_h/build
      shell: bash
      run: ctest
